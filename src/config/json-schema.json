{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "JSON schema for git-hook-tasks config file.",
  "definitions": {
    "TaskListElementName": {
      "type": "string",
      "description": "Name of the task that will be displayed to the user, when running the task."
    },
    "TaskListElementParallelSetting": {
      "type": "boolean",
      "description": "Indicates that this task must not be ran in parallel with the others. If the `parallel` setting is enabled tasks with this option enabled will be ran after all the ones that can be ran simultaneously."
    },
    "TaskListElement": {
      "description": "Definition of a task.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "name": {
              "$ref": "#/definitions/TaskListElementName"
            },
            "mustRunAlone": {
              "$ref": "#/definitions/TaskListElementParallelSetting"
            },
            "script": {
              "type": "string",
              "description": "A script name as defined in the `package.json` file."
            }
          },
          "required": ["name", "script"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "$ref": "#/definitions/TaskListElementName"
            },
            "mustRunAlone": {
              "$ref": "#/definitions/TaskListElementParallelSetting"
            },
            "taskFile": {
              "type": "string",
              "description": "Relative path to the `.js` or `.ts` file. The specified file should have a default export with a function that will be ran for this task."
            }
          },
          "required": ["name", "taskFile"],
          "additionalProperties": false
        }
      ]
    },
    "TaskList": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskListElement"
          }
        },
        {
          "type": "string"
        }
      ]
    }
  },
  "type": "object",
  "properties": {
    "packageManager": {
      "type": "string",
      "description": "Package manager to use to execute the scripts.",
      "enum": ["yarn", "npm"]
    },
    "parallel": {
      "description": "If set to true all hook tasks will be ran in parallel. It can also  be a dictionary describing different 'parallel' setting for each of the hooks. By default it's `false` for all.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "properties": {
            "pre-push": { "type": "boolean" },
            "pre-commit": { "type": "boolean" },
            "post-commit": { "type": "boolean" }
          }
        }
      ]
    },
    "parallelPoolSize": {
      "type": "number",
      "description": "Maximum number of parallel running tasks. Defaults to the number of available threads minus one."
    },
    "hooks": {
      "type": "object",
      "description": "Dictionary containing definitions for all the tasks for given git hooks.",
      "properties": {
        "pre-push": {
          "description": "List of tasks to execute before a Git push. Alternatively it can be a relative path to a directory containing `.js` or `.ts` files, each one of those will be ran as a separate Git hook task.",
          "$ref": "#/definitions/TaskList"
        },
        "pre-commit": {
          "description": "List of tasks to execute before a Git commit. Alternatively it can be a relative path to a directory containing `.js` or `.ts` files, each one of those will be ran as a separate Git hook task.",
          "$ref": "#/definitions/TaskList"
        },
        "post-commit": {
          "description": "List of tasks to execute after a Git commit. Alternatively it can be a relative path to a directory containing `.js` or `.ts` files, each one of those will be ran as a separate Git hook task.",
          "$ref": "#/definitions/TaskList"
        }
      },
      "additionalProperties": false
    }
  },
  "required": ["packageManager"],
  "additionalProperties": false
}
